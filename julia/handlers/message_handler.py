import json
import logging
import random
import string

from julia.dispatcher import *
from aiogram import types


async def animation_info(message: types.Animation):
    logger = logging.getLogger(__name__)
    logger.info(message)
    print(message)
    mes = random.choice(['–ö–∞–∫ —á—É–¥–µ—Å–Ω–æ!',
                         '–ù—É —á—Ç–æ –∑–∞ –º–∏–ª–æ—Ç–∞',
                         '–ö—Ä–∞—Å–∏–≤–µ–Ω—å–∫–æ üòç'])
    # await message.reply(mes)


async def photo_reply(message: types.Message):
    logger = logging.getLogger(__name__)
    logger.info(message)
    mes = random.choice(['–ö–∞–∫ —á—É–¥–µ—Å–Ω–æ!',
                         '–ù—É —á—Ç–æ –∑–∞ –º–∏–ª–æ—Ç–∞',
                         '–ö—Ä–∞—Å–∏–≤–µ–Ω—å–∫–æ üòç'])
    await message.reply(mes)


async def echo(message: types.Message):
    logger = logging.getLogger(__name__)
    logger.info(message)
    print(message)
    if {word.lower().translate(str.maketrans('', '', string.punctuation)) for word in message.text.split()} \
            .intersection(set(json.load(open('cenz.json')))) != set():
        mes = ['–ù—É –∫ —á–µ–º—É —ç—Ç–æ—Ç –º–∞—Ç, –≥–æ—Å–ø–æ–¥–∞',
               '–í—ã–±–∏—Ä–∞–π—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, —Ç–æ–≤–∞—Ä–∏—â–∏',
               '–ü–æ–ø—Ä–æ—à—É –±–µ–∑ –º–∞—Ç–∞, –º–∏–ª–æ—Ä–¥—ã',
               '–ü–æ—á–µ–º—É –≤—ã —Ä—É–≥–∞–µ—Ç–µ—Å—å, –º–∏—Å—å–µ']
        await message.reply(random.choice(mes))
        return await message.delete()
    else:
        if message.from_user.id == 5485747686:
            await message.reply('–≤—Å–µ –º–æ–ª—á—É')
        elif message.from_user.id == 384745640:
            await message.reply(random.choice(['–ø—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —Å–ª–µ–∂—É –∑–∞ —Ç–æ–±–æ–π',
                                               '—è –≤—Å–µ –≤–∏–∂—É']))
    # await bot.send_message(message.chat.id, message.text)


def register_message_handler(dp: Dispatcher):
    dp.register_message_handler(echo)
    dp.register_message_handler(photo_reply, content_types=types.ContentTypes.PHOTO)
